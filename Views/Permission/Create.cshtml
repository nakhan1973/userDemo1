@model userDemo1.Context.RolesPermission

@{
    ViewBag.Title = "Create";
    List<string> moduleNames = new List<string>() { "Users", "Roles", "Permissions", "Customers", "Operations" };
}

<h2>Create</h2>

@using (Html.BeginForm("AddUpdatePermission", "Permission", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>RolePermission</h4>
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.RoleId)
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ModuleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ModuleName,
                        new SelectList(moduleNames), new { style = "width: 250px;padding:5px;" })
                @Html.ValidationMessageFor(model => model.ModuleName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ViewPermission, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ViewPermission)
                    @Html.ValidationMessageFor(model => model.ViewPermission, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AddPermission, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.AddPermission)
                    @Html.ValidationMessageFor(model => model.AddPermission, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EditPermission, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.EditPermission)
                    @Html.ValidationMessageFor(model => model.EditPermission, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DeletePermission, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.DeletePermission)
                    @Html.ValidationMessageFor(model => model.DeletePermission, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        @Html.HiddenFor(model => model.RoleId)

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default " />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", new { RoleId = Model.RoleId })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}